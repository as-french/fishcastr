% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hydrologic_model.R
\name{hydrologic_model}
\alias{hydrologic_model}
\title{A wrapper function for GR4J hydrologic model}
\usage{
hydrologic_model(
  met_data,
  warm_up_dates_range,
  run_dates_range,
  GR4J_params,
  log_transform = FALSE,
  ...
)
}
\arguments{
\item{met_data}{A data.frame with headers in order: "date","pr","petH".}

\item{warm_up_dates_range}{Two concatenated dates.}

\item{run_dates_range}{Two concatenated dates.}

\item{GR4J_params}{A numeric vector containing GR4J parameters.}

\item{log_transform}{natural log transform discharges? TRUE or FALSE}

\item{...}{Other arguments to nested functions.}
}
\value{
A two column data.frame with headers: "date" and "Qsim".
}
\description{
This function generates discharge predictions for a specified
period given a series of arguments containing warm-up and target run
periods and model parameters for GR4J (Coron et al., 2020).
}
\examples{
\dontrun{
met <- fishcastr::grid_ERA5_1979_2019_Jan_bc
data_met <-  fishcastr::convert_grid_to_dataframe(grid_obj = met)[, -2]
names(data_met)[which(names(data_met) == "dates1")] <-  "date"
hydrologic_model(met_data = data_met[, c("date", "pr", "petH")] ,
                 warm_up_dates_range = c(as.Date("1979-01-01"),
                                        as.Date("1980-12-31")),
                 run_dates_range = c(as.Date("1981-01-01"),
                                    as.Date("2019-01-31")),
                 GR4J_params = as.numeric(fishcastr::GR4J_Burr_params_ERA5_bcc))
                 }
}
\references{
Coron, L., Delaigue, O., Thirel, G., Perrin, C., & Michel, C. (2020). AirGR:
Suite of GR Hydrological Models for Precipitation-Runoff Modelling. In R
News. https://doi.org/10.15454/EX11NA
}
