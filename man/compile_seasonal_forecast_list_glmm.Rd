% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile_seasonal_forecast_list_glmm.R
\name{compile_seasonal_forecast_list_glmm}
\alias{compile_seasonal_forecast_list_glmm}
\title{Generate seasonal forecast}
\usage{
compile_seasonal_forecast_list_glmm(
  calibrated_physio_model,
  calibrated_daily_model,
  predictor_scaling_params,
  hydro_GR4J_model_params,
  air_to_water_model_params,
  seasonal_forecast_grid,
  reanalysis_data,
  counts_and_antecedent_conditions,
  species_bio_year_name,
  species_bio_yday_name,
  fish_reaction_time,
  initialisation_month,
  no_forecast_months,
  operational_year = NULL,
  forecast_method,
  parallel,
  parallel_seed_no,
  ...
)
}
\arguments{
\item{calibrated_physio_model}{A list of length 3 dereived from fitted
bbmle::mle2 object, obj, containing list("data" = obj@data, "coefs" =
bbmle::coef(obj), and "vcov_mat" = bbmle::vcov(obj)).}

\item{calibrated_daily_model}{A list of glmmTMB::glmmTMB models (one per
reforecast).}

\item{predictor_scaling_params}{A list of caret::preProcess objects (one per
reforecast).}

\item{hydro_GR4J_model_params}{A 1 X 4 table of four parameters for running
GR4J lumped hydrological rainfall run-off model.}

\item{air_to_water_model_params}{A 1 X 4 table of four parameters for running
air to water temperature empirical model.}

\item{seasonal_forecast_grid}{A multi-member grid object (e.g., 25 member
ECMWF SEAS5).}

\item{reanalysis_data}{The data.frame containing climate reanalysis data up to the
end of antecedent conditions of the operational year (column order must be
date, tas, pr, petH).}

\item{counts_and_antecedent_conditions}{A data.frame containing historic fish
counts, forecast year days and forecast years and antecedent environmental
conditions.}

\item{species_bio_year_name}{A charachter string identifying each unique
reforecast period (e.g., the 1979:2019 salmon smolt runs at the Burrishoole
catchment, Ireland)}

\item{species_bio_yday_name}{A character string identifying the relvant
biological year day; e.g., for salmon, a header that relates to a column
containing days since winter solstice to winter solstice, i.e., sequences of
1:365 or 1:366.}

\item{fish_reaction_time}{An integer. No. days over which average (linear)
temperature change is perceivable by fish (e.g., European eels, which might
migrate in response to decreasing temperatures).}

\item{initialisation_month}{An integer. Calendar month number during which
seasonal forecast ensemble is initialised (e.g., Feb, 2, for salmonid
smolts).}

\item{no_forecast_months}{An integer. Duration of seasonal forecast in months
(e.g., 6 for salmonids - F|MAMJJ).}

\item{operational_year}{Integer. Operational year.}

\item{forecast_method}{If "stochastic", generates mvrnorm based simulations,
whereby a single mvrnorm sample is taken (i.e., taking into account glmmTMB
model parameter uncertainty) from which conditional means are calculated.
See population prediction intevals (see B Bolker's Ecological Models and
Data with R.); i.e., uncertainty in conditional mean owing to parameter
uncertainty. If "determinstic", generates simulations using model point
estimates to calculate conditonal mean, and simulates random deviates about
that conditional mean.}

\item{parallel}{Boolean. Default FALSE. Use parallel processing?}

\item{parallel_seed_no}{Boolean. Default FALSE. Use parallel processing?}

\item{...}{Other arguments to nested functions.}
}
\value{
A list of data frames containing all simulations (i.e., a data.frame
for each reforecast in addition to the operational forecast).
}
\description{
This function prepares environmental data and generates seasonal
forecasts. The function appends reanalysis (lead-in period) and seasonal
forecast ensemble members (forecast period) in a list of data.frames (one
per reforecast and member; i.e., 25 data frames per year for 1979:2019 for
salmon smolt example). In addition, non-climate variables (e.g., moonlight
exposure, potential evapotranspiration, catchment discharge, photoperiod and
"delta" variables) are calculated for each reforecast. Subsequently, each
data.frame is used to generate simulated counts from a fitted
glmmTMB::glmmTMB model object; note, a list of models and scaling parameters
are supplied to the function to ensure "leave-one-year-out" method applies
for validation purposes.
}
\examples{
\dontrun{
  # load physio response model
  mod_physio_expmG <- fishcastr::model_physio_expmG_salmon

  # load and subset list into model and scaling lists for relevant years only 1993
  # - 2019
  model_list_1of2 <-
    readRDS(paste0(
      system.file("vignettes", package = "fishcastr"),
      "/vignette_data/mTrain_genpois_salmon_list_1of2.rds"
    ))
  model_list_2of2 <-
    readRDS(paste0(
      system.file("vignettes", package = "fishcastr"),
      "/vignette_data/mTrain_genpois_salmon_list_2of2.rds"
    ))

  mTrain_genpois_list <- list()
  mTrain_genpois_list[1:length(model_list_1of2)] <- model_list_1of2
  mTrain_genpois_list[(1 + length(model_list_1of2)):(length(model_list_1of2) +
                                                       length(model_list_2of2))] <- model_list_2of2

  # add 2019 data
  mTrain_genpois_salmon_2019 <-
    model_list_1of2 <-
    readRDS(paste0(
      system.file("vignettes", package = "fishcastr"),
      "/vignette_data/mTrain_genpois_salmon_2019.rds"
    ))
  pP_params_salmon_2019 <-
    model_list_1of2 <-
    readRDS(paste0(
      system.file("vignettes", package = "fishcastr"),
      "/vignette_data/pP_params_salmon_2019.rds"
    ))

  mTrain_genpois_list[[39]] <- list(mTrain_genpois_salmon_2019,
                                    pP_params_salmon_2019)

  names(mTrain_genpois_list) <- 1981:2019

  # subset to 2016 - 2019 models for testing function
  mTrain_genpois_list_sub <-
    mTrain_genpois_list[which(names(mTrain_genpois_list) \%in\% c(2018:2019))]

  # model list
  mTrain_genpois_list_sub_mod <-
    sapply(mTrain_genpois_list_sub, "[", 1)
  # scaling param list
  mTrain_genpois_list_sub_scPara <-
    sapply(mTrain_genpois_list_sub, "[", 2)

  # reanalysis data subset to 2019 for (antecedent in conditions must run to end
  # of Jan 2019)
  data_ERA5_1979_2019_Jan_bc <-
    fishcastr::convert_grid_to_dataframe(grid_obj = fishcastr::grid_ERA5_1979_2019_Jan_bc)[, -2]
  names(data_ERA5_1979_2019_Jan_bc)[which(names(data_ERA5_1979_2019_Jan_bc) == "dates1")] <-
    "date"

  data_ssmolt_enviro_1981_2019 <-
    readRDS(paste0(
      system.file("vignettes", package = "fishcastr"),
      "/vignette_data/data_ssmolt_enviro_1981_2019.rds"
    ))

  # subset the seasonal forecast grid to test using 5 years of data for example
  # check
  seas_subset <-
    lapply(fishcastr::grid_SEAS5_1993_2019_2_3_4_5_6_7_8_tas_pr_petH_bc,
           function(x) {
             transformeR::subsetGrid(x, years = 2018:2019)
           })

  system.time({
    seasonal_forecast_list_dfs_ssmolt_daily_stoc <-
      fishcastr::compile_seasonal_forecast_list_glmm(
        calibrated_physio_model = mod_physio_expmG,
        calibrated_daily_model = mTrain_genpois_list_sub_mod,
        predictor_scaling_params = mTrain_genpois_list_sub_scPara,
        hydro_GR4J_model_params = fishcastr::GR4J_Burr_params_ERA5_bcc,
        air_to_water_model_params = fishcastr::air_to_water_Feeagh_params_ERA5_bcc,
        seasonal_forecast_grid = seas_subset,
        reanalysis_data = data_ERA5_1979_2019_Jan_bc,
        counts_and_antecedent_conditions = data_ssmolt_enviro_1981_2019,
        species_bio_year_name = "salmonid_year",
        species_bio_yday_name = "salmonid_yday",
        fish_reaction_time = 20,
        initialisation_month = 2,
        no_forecast_months = 6,
        forecast_method = "stochastic",
        parallel = FALSE,
        parallel_seed_no = 23456,
        operational_year = 2019
      )
  })
}
}
